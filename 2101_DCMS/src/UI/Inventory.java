/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;
import Controller_Connector.DBConnect_Main;
import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.*;
import javax.swing.BorderFactory;
import javax.swing.DefaultCellEditor;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Nikko
 */
public class Inventory extends javax.swing.JFrame {

    DBConnect_Main dbc_Inv = new DBConnect_Main();
    private PreparedStatement preparedStatement_Inv;
    private Connection con_Inv;
    public Inventory() {
        initComponents();
        con_Inv = dbc_Inv.getConnection();
        loadInventoryTable();
    }
    
    private void clearInventoryFields() {
    itemName.setText("");
    quantityInv.setText("");
    priceInv.setText("");
    restockDateInv.setDate(null);
    expiryInv.setDate(null);
    statusInv.setSelectedIndex(0);
    descriptionInv.setText("");
}

    
    private void loadInventoryTable() {
    try {
        // SQL query to fetch inventory data
        String query = "SELECT item_id, item_name, quantity_in_stock, selling_price, last_restocked_date, expiry_date, status, description FROM inventory";
        Statement statement = con_Inv.createStatement();
        ResultSet resultSet = statement.executeQuery(query);

        
        DefaultTableModel model = (DefaultTableModel) inventoryTable.getModel();
        model.setRowCount(0); // Clear table rows
        while (resultSet.next()) {
            model.addRow(new Object[]{
                resultSet.getInt("item_id"),
                resultSet.getString("item_name"),
                resultSet.getInt("quantity_in_stock"),
                resultSet.getDouble("selling_price"),
                resultSet.getDate("last_restocked_date"),
                resultSet.getDate("expiry_date"),
                resultSet.getString("status"),
                resultSet.getString("description")
            });
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error loading inventory table: " + ex.getMessage());
    }
}
    
    private void expandView() {
    // Create a new frame for the expanded view
    JFrame expandedFrame = new JFrame("Expanded Inventory View");
    expandedFrame.setSize(1200, 600); // Set preferred size for the expanded frame
    expandedFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

    // Use the same table model as the inventoryTable
    JTable expandedTable = new JTable(inventoryTable.getModel());

    // Enable row resizing and set an initial row height
    expandedTable.setRowHeight(30);

    // Disable horizontal scrolling by adjusting column widths dynamically
    expandedTable.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);

    // Calculate the total width of the frame and distribute it among columns
    int tableWidth = expandedFrame.getWidth();
    TableColumnModel columnModel = expandedTable.getColumnModel();
    int columnCount = columnModel.getColumnCount();
    for (int i = 0; i < columnCount; i++) {
        columnModel.getColumn(i).setPreferredWidth(tableWidth / columnCount);
    }

    // Add mouse listener for cell click interactions
    expandedTable.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseClicked(MouseEvent e) {
            int row = expandedTable.rowAtPoint(e.getPoint());
            int column = expandedTable.columnAtPoint(e.getPoint());
            if (row >= 0 && column >= 0) {
                Object value = expandedTable.getValueAt(row, column);
                JOptionPane.showMessageDialog(expandedFrame,
                    "Cell clicked: (" + row + ", " + column + ")\nValue: " + value,
                    "Cell Details",
                    JOptionPane.INFORMATION_MESSAGE);
            }
        }
    });


    // Add the table to a scroll pane
    JScrollPane scrollPane = new JScrollPane(expandedTable);
    expandedFrame.add(scrollPane);

    // Set the expanded frame to be visible
    expandedFrame.setVisible(true);
}












    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        inventoryTable = new javax.swing.JTable();
        editInv = new javax.swing.JButton();
        saveInv = new javax.swing.JButton();
        deleteInv = new javax.swing.JButton();
        clearInv = new javax.swing.JButton();
        itemName = new javax.swing.JTextField();
        priceInv = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        patientButton = new javax.swing.JButton();
        appointButton = new javax.swing.JButton();
        treatmentButton = new javax.swing.JButton();
        prescripButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        prescripButton1 = new javax.swing.JButton();
        descriptionInv = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        quantityInv = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        restockDateInv = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        expiryInv = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        statusInv = new javax.swing.JComboBox<>();
        expandInv = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(892, 574));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(new javax.swing.border.LineBorder(java.awt.Color.red, 3, true));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Bahnschrift", 0, 24)); // NOI18N
        jLabel4.setForeground(java.awt.Color.red);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java DCMS icons/warehouse.png"))); // NOI18N
        jLabel4.setText("Inventory");

        jLabel1.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel1.setText("Item Name");

        jLabel5.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel5.setText("Description");

        jLabel6.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel6.setText("Price");

        inventoryTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        inventoryTable.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        inventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ItemID", "Item Name", "Quantity", "Price", "Last Restock", "Expiry", "Status", "Description"
            }
        ));
        inventoryTable.setGridColor(new java.awt.Color(0, 0, 0));
        inventoryTable.setName(""); // NOI18N
        inventoryTable.setShowGrid(true);
        inventoryTable.setSurrendersFocusOnKeystroke(true);
        jScrollPane2.setViewportView(inventoryTable);

        editInv.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        editInv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java DCMS icons/edit.png"))); // NOI18N
        editInv.setText("EDIT");
        editInv.setBorder(new javax.swing.border.LineBorder(java.awt.Color.red, 2, true));
        editInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editInvActionPerformed(evt);
            }
        });

        saveInv.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        saveInv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java DCMS icons/save.png"))); // NOI18N
        saveInv.setText("SAVE");
        saveInv.setBorder(new javax.swing.border.LineBorder(java.awt.Color.red, 2, true));
        saveInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveInvActionPerformed(evt);
            }
        });

        deleteInv.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        deleteInv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java DCMS icons/bin.png"))); // NOI18N
        deleteInv.setText("DELETE");
        deleteInv.setBorder(new javax.swing.border.LineBorder(java.awt.Color.red, 2, true));
        deleteInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteInvActionPerformed(evt);
            }
        });

        clearInv.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        clearInv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java DCMS icons/clear-filter.png"))); // NOI18N
        clearInv.setText("CLEAR");
        clearInv.setBorder(new javax.swing.border.LineBorder(java.awt.Color.red, 2, true));
        clearInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearInvActionPerformed(evt);
            }
        });

        priceInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceInvActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel9.setText("Inventory List");

        jPanel2.setBackground(java.awt.Color.red);

        patientButton.setBackground(java.awt.Color.red);
        patientButton.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        patientButton.setForeground(new java.awt.Color(255, 255, 255));
        patientButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java DCMS icons/patient.png"))); // NOI18N
        patientButton.setText("Patients");
        patientButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        patientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientButtonActionPerformed(evt);
            }
        });

        appointButton.setBackground(java.awt.Color.red);
        appointButton.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        appointButton.setForeground(new java.awt.Color(255, 255, 255));
        appointButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java DCMS icons/appoinment2.png"))); // NOI18N
        appointButton.setText("Appointments");
        appointButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        appointButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appointButtonActionPerformed(evt);
            }
        });

        treatmentButton.setBackground(java.awt.Color.red);
        treatmentButton.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        treatmentButton.setForeground(new java.awt.Color(255, 255, 255));
        treatmentButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java DCMS icons/syringe.png"))); // NOI18N
        treatmentButton.setText("Treatments");
        treatmentButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        treatmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                treatmentButtonActionPerformed(evt);
            }
        });

        prescripButton.setBackground(java.awt.Color.red);
        prescripButton.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        prescripButton.setForeground(new java.awt.Color(255, 255, 255));
        prescripButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java DCMS icons/prescription.png"))); // NOI18N
        prescripButton.setText("Prescriptions");
        prescripButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        prescripButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prescripButtonActionPerformed(evt);
            }
        });

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java DCMS icons/prevention.png"))); // NOI18N

        prescripButton1.setBackground(java.awt.Color.red);
        prescripButton1.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        prescripButton1.setForeground(new java.awt.Color(255, 255, 255));
        prescripButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java DCMS icons/cashless-payment.png"))); // NOI18N
        prescripButton1.setText("Payment");
        prescripButton1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        prescripButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prescripButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(patientButton, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(appointButton, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(treatmentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(prescripButton, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel10))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(prescripButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patientButton)
                .addGap(9, 9, 9)
                .addComponent(appointButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(treatmentButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(prescripButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(prescripButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel2.setText("Quantity");

        jLabel7.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel7.setText("Last Restock");

        jLabel8.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel8.setText("Expiry Date");

        jLabel11.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel11.setText("Status");

        statusInv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Low Stocks", "Expired" }));

        expandInv.setFont(new java.awt.Font("Bahnschrift", 1, 10)); // NOI18N
        expandInv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java DCMS icons/expand.png"))); // NOI18N
        expandInv.setText("Expand");
        expandInv.setBorder(new javax.swing.border.LineBorder(java.awt.Color.red, 2, true));
        expandInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expandInvActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(itemName, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel1)
                                            .addComponent(quantityInv, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(28, 28, 28)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel7)
                                            .addComponent(priceInv)
                                            .addComponent(restockDateInv, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE))
                                        .addGap(27, 27, 27)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel8)
                                            .addComponent(expiryInv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel11)
                                            .addComponent(statusInv, 0, 96, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(descriptionInv, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(126, 126, 126)
                                .addComponent(saveInv, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(editInv, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(deleteInv, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(clearInv, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(264, 264, 264)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(expandInv, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(243, 243, 243)
                    .addComponent(jLabel4)
                    .addContainerGap(457, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(itemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(priceInv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(expiryInv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quantityInv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(restockDateInv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(statusInv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(descriptionInv, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveInv)
                    .addComponent(editInv)
                    .addComponent(deleteInv)
                    .addComponent(clearInv))
                .addGap(9, 9, 9)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(expandInv))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(jLabel4)
                    .addContainerGap(445, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void editInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editInvActionPerformed
        int selectedRow = inventoryTable.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select an item to edit.");
        return;
    }

    // Get the ID of the selected item
    int itemID = (int) inventoryTable.getValueAt(selectedRow, 0); // Assuming the ID is in the first column

    // Retrieve new values from the input fields
    String item_Name = itemName.getText();
    String quantity_Inv = quantityInv.getText();
    String price_Inv = priceInv.getText();
    java.util.Date lastRe_Date = restockDateInv.getDate();
    java.util.Date expiry_Date = expiryInv.getDate();
    String inv_Status = statusInv.getSelectedItem() != null ? statusInv.getSelectedItem().toString() : null;
    String inv_descrip = descriptionInv.getText();

    // Validate inputs
    if (item_Name.isEmpty() || quantity_Inv.isEmpty() || price_Inv.isEmpty() || inv_Status == null) {
        JOptionPane.showMessageDialog(this, "Please fill out all mandatory fields.");
        return;
    }

    try {
        // Format the date fields
        java.text.SimpleDateFormat outputFormat = new java.text.SimpleDateFormat("yyyy-MM-dd");
        String formattedLastReDate = lastRe_Date != null ? outputFormat.format(lastRe_Date) : null;
        String formattedExpiryDate = expiry_Date != null ? outputFormat.format(expiry_Date) : null;

        // Update query
        String query = "UPDATE inventory SET item_name = ?, quantity_in_stock = ?, selling_price = ?, " +
                       "last_restocked_date = ?, expiry_date = ?, status = ?, description = ? WHERE item_id = ?";

        preparedStatement_Inv = con_Inv.prepareStatement(query);
        preparedStatement_Inv.setString(1, item_Name);
        preparedStatement_Inv.setInt(2, Integer.parseInt(quantity_Inv));
        preparedStatement_Inv.setDouble(3, Double.parseDouble(price_Inv));
        
        if (formattedLastReDate != null) {
            preparedStatement_Inv.setString(4, formattedLastReDate);
        } else {
            preparedStatement_Inv.setNull(4, java.sql.Types.DATE);
        }

        if (formattedExpiryDate != null) {
            preparedStatement_Inv.setString(5, formattedExpiryDate);
        } else {
            preparedStatement_Inv.setNull(5, java.sql.Types.DATE);
        }

        preparedStatement_Inv.setString(6, inv_Status);
        preparedStatement_Inv.setString(7, inv_descrip);
        preparedStatement_Inv.setInt(8, itemID);

        // Execute the update
        int rowsUpdated = preparedStatement_Inv.executeUpdate();
        if (rowsUpdated > 0) {
            JOptionPane.showMessageDialog(this, "Inventory updated successfully!");
            clearInventoryFields(); // Clear input fields
            loadInventoryTable(); // Refresh table
        } else {
            JOptionPane.showMessageDialog(this, "Error updating inventory. Please try again.");
        }

    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error updating inventory: " + ex.getMessage());
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Please enter valid numbers for Quantity and Price.");
        }
    }//GEN-LAST:event_editInvActionPerformed

    private void saveInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveInvActionPerformed
        String item_Name = itemName.getText();
    String quantity_Inv = quantityInv.getText();
    String price_Inv = priceInv.getText();
    java.util.Date lastRe_Date = restockDateInv.getDate();
    java.util.Date expiry_Date = expiryInv.getDate();
    String inv_Status = statusInv.getSelectedItem() != null ? statusInv.getSelectedItem().toString() : null;
    String inv_descrip = descriptionInv.getText();

    // Validate input
    if (item_Name.isEmpty() || quantity_Inv.isEmpty() || price_Inv.isEmpty() || inv_Status == null) {
        JOptionPane.showMessageDialog(this, "Please fill in all required fields!");
        return;
    }

    try {
        // Convert dates to SQL format
        java.text.SimpleDateFormat outputFormat = new java.text.SimpleDateFormat("yyyy-MM-dd");
        String formattedLastRestock = lastRe_Date != null ? outputFormat.format(lastRe_Date) : null;
        String formattedExpiry = expiry_Date != null ? outputFormat.format(expiry_Date) : null;

        // SQL query to insert data
        String query = "INSERT INTO inventory (item_name, quantity_in_stock, selling_price, last_restocked_date, expiry_date, status, description) VALUES (?, ?, ?, ?, ?, ?, ?)";

        preparedStatement_Inv = con_Inv.prepareStatement(query);
        preparedStatement_Inv.setString(1, item_Name);
        preparedStatement_Inv.setInt(2, Integer.parseInt(quantity_Inv));
        preparedStatement_Inv.setDouble(3, Double.parseDouble(price_Inv));
        preparedStatement_Inv.setString(4, formattedLastRestock);
        preparedStatement_Inv.setString(5, formattedExpiry);
        preparedStatement_Inv.setString(6, inv_Status);
        preparedStatement_Inv.setString(7, inv_descrip);

        // Execute the query
        preparedStatement_Inv.executeUpdate();

        JOptionPane.showMessageDialog(this, "Item added to inventory successfully!");

        // Clear fields
        clearInventoryFields();

        // Refresh table
        loadInventoryTable();

    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error saving item to inventory: " + ex.getMessage());
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Invalid number format: " + ex.getMessage());
        }
        
    }//GEN-LAST:event_saveInvActionPerformed

    private void deleteInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteInvActionPerformed
        int selectedRow = inventoryTable.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select an item to delete.");
        return;
    }

    // Confirm deletion
    int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this item?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
    if (confirm != JOptionPane.YES_OPTION) {
        return;
    }

    // Get the ID of the selected item
    int itemID = (int) inventoryTable.getValueAt(selectedRow, 0); // Assuming the ID is in the first column

    try {
        // Delete query
        String query = "DELETE FROM inventory WHERE item_id = ?";
        preparedStatement_Inv = con_Inv.prepareStatement(query);
        preparedStatement_Inv.setInt(1, itemID);

        // Execute the deletion
        int rowsDeleted = preparedStatement_Inv.executeUpdate();
        if (rowsDeleted > 0) {
            JOptionPane.showMessageDialog(this, "Item deleted successfully!");
            loadInventoryTable(); // Refresh table to reflect changes
        } else {
            JOptionPane.showMessageDialog(this, "Error deleting item. Please try again.");
        }

    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error deleting item: " + ex.getMessage());
        }
    }//GEN-LAST:event_deleteInvActionPerformed

    private void clearInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearInvActionPerformed
        clearInventoryFields();
    }//GEN-LAST:event_clearInvActionPerformed

    private void patientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientButtonActionPerformed

    private void appointButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appointButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_appointButtonActionPerformed

    private void treatmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_treatmentButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_treatmentButtonActionPerformed

    private void prescripButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prescripButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prescripButtonActionPerformed

    private void prescripButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prescripButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prescripButton1ActionPerformed

    private void priceInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceInvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceInvActionPerformed

    private void expandInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expandInvActionPerformed
        expandView();
    }//GEN-LAST:event_expandInvActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton appointButton;
    private javax.swing.JButton clearInv;
    private javax.swing.JButton deleteInv;
    private javax.swing.JTextField descriptionInv;
    private javax.swing.JButton editInv;
    private javax.swing.JButton expandInv;
    private com.toedter.calendar.JDateChooser expiryInv;
    private javax.swing.JTable inventoryTable;
    private javax.swing.JTextField itemName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton patientButton;
    private javax.swing.JButton prescripButton;
    private javax.swing.JButton prescripButton1;
    private javax.swing.JTextField priceInv;
    private javax.swing.JTextField quantityInv;
    private com.toedter.calendar.JDateChooser restockDateInv;
    private javax.swing.JButton saveInv;
    private javax.swing.JComboBox<String> statusInv;
    private javax.swing.JButton treatmentButton;
    // End of variables declaration//GEN-END:variables
}
